/* tslint:disable */
/* eslint-disable */
/**
 * Thinkeep API
 * 일기 작성 및 관리 API 문서
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@thinkeep.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserInfo
 */
export interface UserInfo {
    /**
     * 
     * @type {number}
     * @memberof UserInfo
     */
    userNo?: number;
    /**
     * 
     * @type {string}
     * @memberof UserInfo
     */
    nickname?: string;
    /**
     * 
     * @type {string}
     * @memberof UserInfo
     */
    profileImage?: string;
    /**
     * 
     * @type {string}
     * @memberof UserInfo
     */
    gender?: UserInfoGenderEnum;
    /**
     * 
     * @type {Date}
     * @memberof UserInfo
     */
    birthDate?: Date;
    /**
     * 
     * @type {number}
     * @memberof UserInfo
     */
    streakCount?: number;
    /**
     * 
     * @type {Date}
     * @memberof UserInfo
     */
    createdAt?: Date;
    /**
     * 
     * @type {boolean}
     * @memberof UserInfo
     */
    kakaoUser?: boolean;
}


/**
 * @export
 */
export const UserInfoGenderEnum = {
    Male: 'MALE',
    Female: 'FEMALE',
    Other: 'OTHER'
} as const;
export type UserInfoGenderEnum = typeof UserInfoGenderEnum[keyof typeof UserInfoGenderEnum];


/**
 * Check if a given object implements the UserInfo interface.
 */
export function instanceOfUserInfo(value: object): value is UserInfo {
    return true;
}

export function UserInfoFromJSON(json: any): UserInfo {
    return UserInfoFromJSONTyped(json, false);
}

export function UserInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'userNo': json['userNo'] == null ? undefined : json['userNo'],
        'nickname': json['nickname'] == null ? undefined : json['nickname'],
        'profileImage': json['profileImage'] == null ? undefined : json['profileImage'],
        'gender': json['gender'] == null ? undefined : json['gender'],
        'birthDate': json['birthDate'] == null ? undefined : (new Date(json['birthDate'])),
        'streakCount': json['streakCount'] == null ? undefined : json['streakCount'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'kakaoUser': json['kakaoUser'] == null ? undefined : json['kakaoUser'],
    };
}

export function UserInfoToJSON(json: any): UserInfo {
    return UserInfoToJSONTyped(json, false);
}

export function UserInfoToJSONTyped(value?: UserInfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'userNo': value['userNo'],
        'nickname': value['nickname'],
        'profileImage': value['profileImage'],
        'gender': value['gender'],
        'birthDate': value['birthDate'] == null ? undefined : ((value['birthDate']).toISOString().substring(0,10)),
        'streakCount': value['streakCount'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'kakaoUser': value['kakaoUser'],
    };
}

